What is react:
--------------
In computing, React (also known as React.js or ReactJS) is a JavaScript library for building user interfaces. It is maintained by Facebook and a community of individual developers and companies.

React can be used as a base in the development of single-page or mobile applications. Complex React applications usually require the use of additional libraries for state management, routing, and interaction with an API.

Components:
-----------
The heart of all React application is components. A component is essentialy a pice of user interfaces. Every React application have at least one component which reffer as root component. This component represents the enter application and contains other child components. So every React application is essentialy a tree of components. 

What is Babel:
--------------
Babel is a JavaScript compiler that can translate markup or programming languages into JavaScript. With Babel, we can use the newest features of JavaScript (ES6 - ECMAScript 2015). Babel is available for different conversions. React uses Babel to convert JSX into JavaScript.

What is JSX:
------------
JSX stands for JavaScript XML. JSX is an XML/HTML like extension to JavaScript. JSX is a XML syntax extension to JavaScript that also comes with the full power of ES6 (ECMAScript 2015).

Just like HTML, JSX tags can have a tag names, attributes, and children. If an attribute is wrapped in curly braces, the value is a JavaScript expression.

React vs. AngularJS:
---------------------
ReactJS is a library for building user interfaces views. For works with ReactJS we have to import some extra packages.

AngularJS is more than ReactJS. AngularJS is a JavaScript framework which allow us to building single page application. AngularJS has a router supports form validation and so on. AngularJS can control the complete user experience to control the navigation between pages.

JavaScript Expression:
----------------------
An expression produces a value and can be written wherever a value is expected, for example as an argument in a function call. Each of the following lines contains an expression:

Example:
myvar
3 + x
myfunc("a", "b")

JavaScript Statement:
---------------------
A statement performs an action. Loops and if statements are examples of statements. A program is basically a sequence of statements. Wherever JavaScript expects a statement, we can also write an expression. Such a statement is called an expression statement.

The reverse does not hold: you cannot write a statement where JavaScript expects an expression. For example, an if statement cannot become the argument of a function.










Required thing:
---------------

1) Install Node
2) Atom Code Editor

Install React JS:
-----------------
To install and use ReactJS, we need two things:
  a) Node.js
  b) NPM

NodeJS:
------
Node.js is a Javascript run-time environment that allow us to execute Javascript code like if we were working on a server.
Check Version: node --version

NPM:
----
NPM is a package manager for Javascript, that is, NPM allows us to install Javascript libraries to make our experience even more richer by expanding the basic functionalities.

Check Version: npm -version

Now follow the following steps:
-------------------------------

(https://www.tutorialspoint.com/reactjs/reactjs_environment_setup.htm)
Step-1:
-------
  1) npm init
  2) package name: react_app (press enter)
  3) version: (1.o.o) (press enter)
  4) description: (press enter)
  5) entry point: (index.js) (press enter)
  6) test command: (press enter)
  7) git repository:(press enter)
  8) keywords: (press enter)
  9) author: me (press enter)
  10) license: (ISC) MIT (press enter)
  11) Is this OK? (yes) y (press enter)

Step 2 - install React and react dom:
-------------------------------------
Since our main task is to install ReactJS, install it, and its dom packages, using install react and react-dom commands of npm respectively. You can add the packages we install, to package.json file using the --save option.

  npm install react --save
  npm install react-dom --save

Or, you can install all of them in single command as −

  npm install react react-dom --save

Step 3 - Install webpack:
-------------------------
Since we are using webpack to generate bundler install webpack, webpack-dev-server and webpack-cli.

  npm install webpack –save
  npm install webpack-dev-server --save
  npm install webpack-cli --save

Or

  npm install webpack webpack-dev-server webpack-cli --save

Step 4 - Install babel:
-----------------------
Install babel, and its plugins babel-core, babel-loader, babel-preset-env, babel-preset-react and, html-webpack-plugin

npm install babel-core --save-dev
npm install babel-loader --save-dev
npm install babel-preset-env --save-dev
npm install babel-preset-react --save-dev
npm install html-webpack-plugin --save-dev

Or

  npm install babel-core babel-loader babel-preset-env babel-preset-react html-webpack-plugin --save-dev
